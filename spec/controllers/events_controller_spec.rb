require 'rails_helper'
require 'net/http'
require 'json'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.
#
# Also compared to earlier versions of this generator, there are no longer any
# expectations of assigns and templates rendered. These features have been
# removed from Rails core in Rails 5, but can be added back in via the
# `rails-controller-testing` gem.

RSpec.describe EventsController, type: :controller do
  describe "POST #events" do
    before(:each) do
      stub_request(:get, "http://https//api.github.com/repos/Jngai/rumbl/events:80/").
      with(
        headers: {
        'Accept'=>'*/*',
        'Accept-Encoding'=>'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
        'User-Agent'=>'Ruby'
        }).
      to_return(status: 200, body: "[{'repo':{'id':285067708,'name':'Jngai/rumbl',
        'url':'https://api.github.com/repos/Jngai/rumbl'},'type':'IssueCommentEvent',
        'actor':{'id': 1547934,'login':'Jngai','display_login':'Jngai',
        'gravatar_id':'','url':'https://api.github.com/users/Jngai',
        'avatar_url':'https://avatars.githubusercontent.com/u/1547934?'
        },'created_at':'2020-08-25T12:34:34Z'}]", headers: {})
    end

    it "returns correct owner and repo events" do
      uri = URI("https://api.github.com/repos/Jngai/rumbl/events")
      response = Net::HTTP.get("https://api.github.com/repos/Jngai/rumbl/events", "/")
      response = response.gsub("\n",'').gsub(/\s+/, "")
      #the response needs to be cleaned up before it can be parsed by json.parse
      response = JSON.parse(response)
      expect(response.first["actor"]["login"]).to eq "Jngai"
      expect(response.first["repo"]["name"]).to eq "Jngai/rumbl"
    end
  end
end
